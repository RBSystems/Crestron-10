//Compiler Directives
#CATEGORY "41" // Remote System Interface
#SYMBOL_NAME "SSL Signal Logic Test"
#HINT ""
#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE

// Constants
#DEFINE_CONSTANT STRING_SIZE 50
#DEFINE_CONSTANT MAX_ARRAY_SIZE 10

// Include Libraries
#USER_SIMPLSHARP_LIBRARY "ssl_Utility"

// Inputs

DIGITAL_INPUT dIn_01, dIn_02, dIn_03, dIn_04, dIn_05; // {0}
DIGITAL_INPUT dArrIn_01[MAX_ARRAY_SIZE]; // {1}
DIGITAL_INPUT dArrIn_02[MAX_ARRAY_SIZE]; // {2}
DIGITAL_INPUT dArrIn_03[MAX_ARRAY_SIZE]; // {3}

ANALOG_INPUT aIn_01, aIn_02, aIn_03, aIn_04, aIn_05; // {0}
STRING_INPUT sIn_01[STRING_SIZE], sIn_02[STRING_SIZE], sIn_03[STRING_SIZE], sIn_04[STRING_SIZE], sIn_05[STRING_SIZE]; // {0}

ANALOG_INPUT aArrIn_01[MAX_ARRAY_SIZE]; // {1}
ANALOG_INPUT aArrIn_02[MAX_ARRAY_SIZE]; // {2}
ANALOG_INPUT aArrIn_03[MAX_ARRAY_SIZE]; // {3}

STRING_INPUT sArrIn_01[MAX_ARRAY_SIZE][STRING_SIZE]; // {1}
STRING_INPUT sArrIn_02[MAX_ARRAY_SIZE][STRING_SIZE]; // {2}
STRING_INPUT sArrIn_03[MAX_ARRAY_SIZE][STRING_SIZE]; // {3}

// Outputs

DIGITAL_OUTPUT dOut_01, dOut_02, dOut_03, dOut_04, dOut_05; // {0}
DIGITAL_OUTPUT dArrOut_01[MAX_ARRAY_SIZE]; // {1}
DIGITAL_OUTPUT dArrOut_02[MAX_ARRAY_SIZE]; // {2}
DIGITAL_OUTPUT dArrOut_03[MAX_ARRAY_SIZE]; // {3}

ANALOG_OUTPUT aOut_01, aOut_02, aOut_03, aOut_04, aOut_05; // {0}
STRING_OUTPUT sOut_01, sOut_02, sOut_03, sOut_04, sOut_05; // {0}

ANALOG_OUTPUT aArrOut_01[MAX_ARRAY_SIZE]; // {1}
ANALOG_OUTPUT aArrOut_02[MAX_ARRAY_SIZE]; // {2}
ANALOG_OUTPUT aArrOut_03[MAX_ARRAY_SIZE]; // {3}

STRING_OUTPUT sArrOut_01[MAX_ARRAY_SIZE]; // {1}
STRING_OUTPUT sArrOut_02[MAX_ARRAY_SIZE]; // {2}
STRING_OUTPUT sArrOut_03[MAX_ARRAY_SIZE]; // {3}

// Parameters

// INTEGER_PARAMETER
// STRING_PARAMETER

// Parameter Properietes

/*
#BEGIN_PARAMETER_PROPERTIES pVariable
   propValidUnits = unitString or unitDecimal|unitHex|unitPercent|unitCharacter|unitTime|unitTicks;
   propDefaultUnit = unitString or unitDecimal or unitHex or unitPercent or unitCharacter or unitTime or unitTicks;
   propList = { "value","label" },{ "value","label" };
   propBounds = lower_bound , upper_bound;
   propDefaultValue = default_value or "default_value";
   propShortDescription = "status_bar_hint_text";
#END_PARAMETER_PROPERTIES
*/

// Structure Definitions

// Global Variables
Module module;

// Functions

FUNCTION InitializeModule()
{
	
}

// Event Handlers

// Main Function

Function Main()
{
	WaitForInitializationComplete();
	// TODO Init
}
