//Compiler Directives
#SYMBOL_NAME "PasswordSaveLoad"
#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE

#DEFINE_CONSTANT DLUGOSC_NAZWY_PLIKU 50
#DEFINE_CONSTANT ROZMIAR_ELEMENTU_PLIKU 10
#DEFINE_CONSTANT ROZMIAR_PLIKU 20

#DEFINE_CONSTANT NAZWA_PLIKU_PREFIX "\\CF0\\Password_"
#DEFINE_CONSTANT NAZWA_PLIKU_SUFIX ".txt" // np.: "\\CF0\\Password_Admin.txt"

#DEFINE_CONSTANT START_STRING "START"
#DEFINE_CONSTANT STOP_STRING "STOP"

#HELP_BEGIN
	----------------------
#HELP_END

// Inputs & Outputs

DIGITAL_INPUT save, load, setDefault;
STRING_INPUT passwordToSave$[ROZMIAR_ELEMENTU_PLIKU];

STRING_OUTPUT loadedPassword$;

// Parameters

STRING_PARAMETER pName[ROZMIAR_PLIKU];
STRING_PARAMETER pDefault[ROZMIAR_PLIKU];

// Parameter Properietes

#BEGIN_PARAMETER_PROPERTIES pName
   propValidUnits = unitString;
   propDefaultUnit = unitString;
   propDefaultValue = "";
   propShortDescription = "name";
#END_PARAMETER_PROPERTIES

// Structure Definitions
// Global Variables

STRING nazwaPliku[DLUGOSC_NAZWY_PLIKU];
STRING toSave[ROZMIAR_PLIKU];

// Functions

FUNCTION ZapiszDoPliku(STRING _toSave)
{
	INTEGER iloscBajtow;
	SIGNED_INTEGER uchwytPliku;

	StartFileOperations();
	uchwytPliku = FileOpen(nazwaPliku, _O_WRONLY | _O_CREAT);

	if (uchwytPliku >= 0)
    {
     	iloscBajtow = WriteString(uchwytPliku, _toSave);
		FileClose(uchwytPliku);
	}
	else
	{
		trace("Nieudany zapis do pliku - uchwytPliku = 0");
	}

	EndFileOperations();
}

FUNCTION OdczytajZPliku()
{
	INTEGER iloscBajtow;
	SIGNED_INTEGER uchwytPliku;
	STRING trescPliku[ROZMIAR_PLIKU];

	StartFileOperations();
	uchwytPliku = FileOpen(nazwaPliku, _O_RDONLY);

	if (uchwytPliku >= 0)
    {
     	iloscBajtow = ReadString(uchwytPliku, trescPliku);
		FileClose(uchwytPliku);
	}
	else
	{
		trace("Nieudany odczyt z pliku - uchwytPliku = 0");
		EndFileOperations();
		loadedPassword$ = pDefault;
		return;
	}

	EndFileOperations();

    loadedPassword$ = trescPliku;
}

// Event Handlers

PUSH save
{
	ZapiszDoPliku(toSave);
	OdczytajZPliku();
}

PUSH load
{
	OdczytajZPliku();
}

PUSH setDefault
{
	toSave = pDefault;
	ZapiszDoPliku(toSave);
	OdczytajZPliku();
	toSave = passwordToSave$;
}

CHANGE passwordToSave$
{
	toSave = passwordToSave$;
}

Function Main()
{
	nazwaPliku = NAZWA_PLIKU_PREFIX + pName + NAZWA_PLIKU_SUFIX;
}
