#ifndef __S2_XBMC_ES_H__
#define __S2_XBMC_ES_H__




/*
* Constructor and Destructor
*/

/*
* DIGITAL_INPUT
*/
#define __S2_XBMC_ES_CONNECT_DIG_INPUT 0
#define __S2_XBMC_ES_UP_DIG_INPUT 1
#define __S2_XBMC_ES_DOWN_DIG_INPUT 2
#define __S2_XBMC_ES_LT_DIG_INPUT 3
#define __S2_XBMC_ES_RT_DIG_INPUT 4
#define __S2_XBMC_ES_REPEAT_DIG_INPUT 5
#define __S2_XBMC_ES_SHUFFLE_DIG_INPUT 6


/*
* ANALOG_INPUT
*/
#define __S2_XBMC_ES_COMMAND_ANALOG_INPUT 0
#define __S2_XBMC_ES_WINDOWNAME__LB___ANALOG_INPUT 1

#define __S2_XBMC_ES_WINDOWNAME$_STRING_INPUT 2
#define __S2_XBMC_ES_WINDOWNAME$_STRING_MAX_LEN 100
CREATE_STRING_STRUCT( S2_XBMC_ES, __WINDOWNAME$, __S2_XBMC_ES_WINDOWNAME$_STRING_MAX_LEN );
#define __S2_XBMC_ES_XBMC_IPADDR$_STRING_INPUT 3
#define __S2_XBMC_ES_XBMC_IPADDR$_STRING_MAX_LEN 16
CREATE_STRING_STRUCT( S2_XBMC_ES, __XBMC_IPADDR$, __S2_XBMC_ES_XBMC_IPADDR$_STRING_MAX_LEN );

#define __S2_XBMC_ES_LOGMESSAGE$_BUFFER_INPUT 4
#define __S2_XBMC_ES_LOGMESSAGE$_BUFFER_MAX_LEN 500
CREATE_STRING_STRUCT( S2_XBMC_ES, __LOGMESSAGE$, __S2_XBMC_ES_LOGMESSAGE$_BUFFER_MAX_LEN );
#define __S2_XBMC_ES_NOTIFICATION$_BUFFER_INPUT 5
#define __S2_XBMC_ES_NOTIFICATION$_BUFFER_MAX_LEN 500
CREATE_STRING_STRUCT( S2_XBMC_ES, __NOTIFICATION$, __S2_XBMC_ES_NOTIFICATION$_BUFFER_MAX_LEN );


/*
* DIGITAL_OUTPUT
*/


/*
* ANALOG_OUTPUT
*/

#define __S2_XBMC_ES_REPEATSTATUS$_STRING_OUTPUT 0
#define __S2_XBMC_ES_SHUFFLESTATUS$_STRING_OUTPUT 1


/*
* Direct Socket Variables
*/

#define __S2_XBMC_ES_EVENTSERVERUDP_SOCKET 8
#define __S2_XBMC_ES_EVENTSERVERUDP_STRING_MAX_LEN 1024
START_SOCKET_DEFINITION( S2_XBMC_ES, __EVENTSERVERUDP )
{
   int SocketStatus;
   enum ESplusSocketType eSocketType;
   int SocketID;
   void *SocketPtr;
CREATE_SOCKET_STRING( S2_XBMC_ES, SocketRxBuf, __S2_XBMC_ES_EVENTSERVERUDP_STRING_MAX_LEN );
};



/*
* INTEGER_PARAMETER
*/
#define __S2_XBMC_ES_EVENTSERVER_PORT__LB___INTEGER_PARAMETER 10
/*
* SIGNED_INTEGER_PARAMETER
*/
/*
* LONG_INTEGER_PARAMETER
*/
/*
* SIGNED_LONG_INTEGER_PARAMETER
*/
/*
* INTEGER_PARAMETER
*/
/*
* SIGNED_INTEGER_PARAMETER
*/
/*
* LONG_INTEGER_PARAMETER
*/
/*
* SIGNED_LONG_INTEGER_PARAMETER
*/
/*
* STRING_PARAMETER
*/


/*
* INTEGER
*/


/*
* LONG_INTEGER
*/


/*
* SIGNED_INTEGER
*/


/*
* SIGNED_LONG_INTEGER
*/


/*
* STRING
*/
#define __S2_XBMC_ES_HEADER$_STRING_MAX_LEN 32
CREATE_STRING_STRUCT( S2_XBMC_ES, __HEADER$, __S2_XBMC_ES_HEADER$_STRING_MAX_LEN );
#define __S2_XBMC_ES_PAYLOAD$_STRING_MAX_LEN 1024
CREATE_STRING_STRUCT( S2_XBMC_ES, __PAYLOAD$, __S2_XBMC_ES_PAYLOAD$_STRING_MAX_LEN );

/*
* STRUCTURE
*/

START_GLOBAL_VAR_STRUCT( S2_XBMC_ES )
{
   void* InstancePtr;
   struct GenericOutputString_s sGenericOutStr;
   unsigned short LastModifiedArrayIndex;

   unsigned short __UNIQUETOKEN;
   unsigned short __PAYLOADLENGTH;
   DECLARE_STRING_STRUCT( S2_XBMC_ES, __HEADER$ );
   DECLARE_STRING_STRUCT( S2_XBMC_ES, __PAYLOAD$ );
   DECLARE_STRING_STRUCT( S2_XBMC_ES, __WINDOWNAME$ );
   DECLARE_STRING_STRUCT( S2_XBMC_ES, __XBMC_IPADDR$ );
   DECLARE_STRING_STRUCT( S2_XBMC_ES, __LOGMESSAGE$ );
   DECLARE_STRING_STRUCT( S2_XBMC_ES, __NOTIFICATION$ );
   DECLARE_SOCKET( S2_XBMC_ES, __EVENTSERVERUDP );
};

START_NVRAM_VAR_STRUCT( S2_XBMC_ES )
{
   unsigned short __REPEATCOUNTER;
   unsigned short __SHUFFLECOUNTER;
};



#endif //__S2_XBMC_ES_H__

